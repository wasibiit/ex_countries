searchData={"items":[{"type":"module","title":"ExCountries","doc":"Constantly updated lists of world countries and their associated alpha-2, alpha-3 and numeric country codes as defined by the ISO 3166 standard, available in [Elixir](http://elixir-lang.org), also ISO 3166-2 codes of provinces/ states associated with the countries in [REST Countries API](http://restcountries.eu/).","ref":"ExCountries.html"},{"type":"module","title":"Installation - ExCountries","doc":"First, add Excountries to your `mix.exs` dependencies:\n\n```elixir\ndef deps do\n[{:ex_countries, \"~> 0.0.1\"}]\nend\n```\n\nand run `$ mix deps.get`. \nYou are all set.\nPlease let us know about the issues and open issue on https://github.com/wasibiit/ex_countries/issues.\nLooking Forward to it :D.\n\nHappy Coding !!!!!","ref":"ExCountries.html#module-installation"},{"type":"module","title":"ExCountries.Country","doc":"This module contains functions to transform country codes into country names and vice versa","ref":"ExCountries.Country.html"},{"type":"function","title":"ExCountries.Country.code_by_name/2","doc":"Returns country code(alpha2 or alpha3) by full name and returns `nil` if not found.","ref":"ExCountries.Country.html#code_by_name/2"},{"type":"function","title":"Examples - ExCountries.Country.code_by_name/2","doc":"iex> ExCountries.Country.code_by_name(\"United States\")\n    \"US\"\n\n    iex> ExCountries.Country.code_by_name(\"United States\", \"alpha3\")\n    \"USA\"\n\n    iex> ExCountries.Country.code_by_name(\"wrong name\")\n    nil","ref":"ExCountries.Country.html#code_by_name/2-examples"},{"type":"function","title":"ExCountries.Country.swith_alpha/1","doc":"Swith country codes between `alpha2` and `alpha3`.\n\n-> if passed `alpha2` will return `alpha3`\n-> if passed `alpha3` will return `alpha2`","ref":"ExCountries.Country.html#swith_alpha/1"},{"type":"function","title":"Examples - ExCountries.Country.swith_alpha/1","doc":"iex> ExCountries.Country.swith_alpha(\"USA\")\n    \"US\"\n\n    iex> ExCountries.Country.swith_alpha(\"US\")\n    \"USA\"\n\n    iex> ExCountries.Country.swith_alpha(\"wrong name\")\n    nil","ref":"ExCountries.Country.html#swith_alpha/1-examples"},{"type":"module","title":"ExCountries.Subdivision","doc":"This module contains list of States or Provinces of countries and returns state_or_province codes by name and vice versa.","ref":"ExCountries.Subdivision.html"},{"type":"function","title":"ExCountries.Subdivision.code_by_name/1","doc":"Get State or province code by full name and returns nil if not found.","ref":"ExCountries.Subdivision.html#code_by_name/1"},{"type":"function","title":"Examples - ExCountries.Subdivision.code_by_name/1","doc":"iex> ExCountries.Subdivision.code_by_name(\"Punjab\")\n    \"PB\"\n\n    iex> ExCountries.Subdivision.code_by_name(\"wrong name\")\n    nil","ref":"ExCountries.Subdivision.html#code_by_name/1-examples"}],"content_type":"text/markdown"}